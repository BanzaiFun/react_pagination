{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","currentPage","setCurrentPage","total","perPage","pageNumbers","i","Math","ceil","push","useEffect","page","length","changePage","direction","current","className","classNames","disabled","href","onClick","map","number","App","useState","setPerPage","items","from","to","numbers","n","getNumbers","indexOfLastItem","indexOfFirstItem","currentItems","slice","lastItem","split","id","value","onChange","event","currentTarget","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAYaA,EAA8B,SAAC,GAQ1C,IAHK,IAJLC,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QAEMC,EAAwB,GAErBC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAQC,GAAUE,GAAK,EACpDD,EAAYI,KAAKH,GAGnBI,qBAAU,WACR,IAAIC,EAAOV,EAEPA,EAAc,IAChBU,EAAO,GAGLV,EAAcI,EAAYO,SAC5BD,EAAON,EAAYO,QAGrBV,EAAeS,KACd,CAACV,IAEJ,IAAMY,EAAa,SAACC,GAClBZ,GAAe,SAAAa,GAAO,MACN,SAAdD,EAAuBC,EAAU,EAAIA,EAAU,MAGnD,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAA0B,IAAhBjB,IAAnD,SACE,mBACE,UAAQ,WACRe,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBlB,EACfmB,QAAS,kBAAMP,EAAW,SAL5B,oBAUDR,EAAYgB,KAAI,SAAAC,GAAM,OACrB,oBACEN,UAAWC,IAAW,YACpBhB,IAAgBqB,EAAS,SAAW,IAFxC,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,WACPlB,EAAeoB,IALnB,SAQGA,KAVEA,MAcT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUjB,IAAgBI,EAAYO,SAD1C,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAelB,IAAgBI,EAAYO,OAC3CQ,QAAS,kBAAMP,EAAW,SAL5B,wBCxEKU,EAAgB,WAAO,IAAD,EACjC,EAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoBC,EAApB,KAEMwB,ECTD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQpB,KAAKqB,GAGf,OAAOD,EDEOE,CAAW,EAAG,IACzBV,KAAI,SAAAS,GAAC,qBAAYA,MAEdE,EAAkB5B,EAAUH,EAC5BgC,EAAoBD,EAAmB5B,EACvC8B,EAAyBR,EAAMS,MAAMF,EAAkBD,GACvDI,EAAQ,UAAGF,EAAaA,EAAatB,OAAS,UAAtC,aAAG,EAAuCyB,MAAM,KAAK,GAEnE,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWf,EADX,mBACiCgC,EAAmB,EADpD,cAC2DG,EAD3D,aAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOnC,EACPoC,SAAU,SAACC,GACThB,GAAYgB,EAAMC,cAAcH,OAChCrC,EAAe,IAPnB,UAUE,wBAAQqC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,eAAgBA,EAChBC,MAAOuB,EAAMd,OACbR,QAASA,EACTH,YAAaA,IAEf,6BACGiC,EAAab,KAAI,SAAAuB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YExDjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ae5d49bf.chunk.js","sourcesContent":["import React, {\n  Dispatch, SetStateAction, useEffect,\n} from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  setCurrentPage: Dispatch<SetStateAction<number>>;\n  total: number;\n  perPage: number;\n  currentPage: number,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  setCurrentPage,\n  total,\n  perPage,\n}) => {\n  const pageNumbers: number[] = [];\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  useEffect(() => {\n    let page = currentPage;\n\n    if (currentPage < 1) {\n      page = 1;\n    }\n\n    if (currentPage > pageNumbers.length) {\n      page = pageNumbers.length;\n    }\n\n    setCurrentPage(page);\n  }, [currentPage]);\n\n  const changePage = (direction: 'prev' | 'next') => {\n    setCurrentPage(current => (\n      direction === 'next' ? current + 1 : current - 1));\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => changePage('prev')}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(number => (\n        <li\n          className={classNames('page-item',\n            currentPage === number ? 'active' : '')}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            onClick={() => {\n              setCurrentPage(number);\n            }}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item',\n        { disabled: currentPage === pageNumbers.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageNumbers.length}\n          onClick={() => changePage('next')}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const items = getNumbers(1, 42)\n    .map(n => `Item ${n}`);\n\n  const indexOfLastItem = perPage * currentPage;\n  const indexOfFirstItem = (indexOfLastItem) - perPage;\n  const currentItems: string[] = items.slice(indexOfFirstItem, indexOfLastItem);\n  const lastItem = currentItems[currentItems.length - 1]?.split(' ')[1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfFirstItem + 1} - ${lastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.currentTarget.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        setCurrentPage={setCurrentPage}\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}